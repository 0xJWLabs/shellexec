name: Release 

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        platform:
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - os-name: Windows-aarch64
            runs-on: windows-latest
            target: aarch64-pc-windows-msvc
    runs-on: ${{ matrix.platform.runs-on }}
    permissions: write-all
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static -Dwarnings
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: rustup toolchain install stable --profile minimal
      - run: rustup toolchain install nightly --allow-downgrade -c rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
          key: ${{ matrix.platform.target }}
      - run: cargo +nightly fmt --check
      - run: cargo clippy
      - uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
      - uses: actions/upload-artifact@v4
        with:
          name: shellexec-${{ matrix.platform.target }}-${{ github.sha }}
          path: |
            target/${{ matrix.platform.target }}/release/*.exe
          retention-days: 14

  release:
    needs: build
    runs-on: windows-latest
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set VERSION from tag
        shell: bash
        run: |
          TAG=${{ github.ref_name }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
      - name: Compress and create checksums
        run: |
          Write-Output $Env:VERSION

          Write-Output "Debugging file structure..."
          Get-ChildItem -Recurse -Name 

          # List out the directories for debugging
          Write-Output "Debugging file structure..."
          Get-ChildItem -Recurse -Name

          # Paths to check based on observed directory structure
          $x64Path = "./shellexec-x86_64-pc-windows-msvc-${{ github.sha }}"
          $aarch64Path = "./shellexec-aarch64-pc-windows-msvc-${{ github.sha }}"

          # Compress artifacts for x86_64 if present
          if (Test-Path "$x64Path/*.exe") {
            Compress-Archive -Path "$x64Path/*.exe" -DestinationPath "shellexec-$Env:VERSION-x86_64-pc-windows-msvc.zip"
            "$((Get-FileHash "shellexec-$Env:VERSION-x86_64-pc-windows-msvc.zip").Hash.ToLower())  shellexec-$Env:VERSION-x86_64-pc-windows-msvc.zip" | Out-File checksums.txt -Append
          } else {
            Write-Output "ERROR: No x86_64 executable found in $x64Path/release/"
            exit 1
          }

          # Compress artifacts for aarch64 if present
          if (Test-Path "$aarch64Path/*.exe") {
            Compress-Archive -Path "$aarch64Path/*.exe" -DestinationPath "shellexec-$Env:VERSION-aarch64-pc-windows-msvc.zip"
            "$((Get-FileHash "shellexec-$Env:VERSION-aarch64-pc-windows-msvc.zip").Hash.ToLower())  shellexec-$Env:VERSION-aarch64-pc-windows-msvc.zip" | Out-File checksums.txt -Append
          } else {
            Write-Output "ERROR: No aarch64 executable found in $aarch64Path/release/"
            exit 1
          }
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
      - shell: bash
        run: |
          if ! type kokai >/dev/null; then cargo install --locked kokai --force; fi
          kokai release --no-emoji --add-links github:commits,issues --ref "$(git tag --points-at HEAD)" >"CHANGELOG.md"
      - uses: softprops/action-gh-release@v2
        with:
          body_path: "CHANGELOG.md"
          files: |
            checksums.txt
            *.zip